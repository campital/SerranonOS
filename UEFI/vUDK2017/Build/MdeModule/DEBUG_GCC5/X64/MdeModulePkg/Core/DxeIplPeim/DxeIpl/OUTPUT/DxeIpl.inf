## @file
#  Last PEIM executed in PEI phase to load DXE Core from a Firmware Volume.
#
#  This module produces a special PPI named the DXE Initial Program Load (IPL)
#  PPI to discover and dispatch the DXE Foundation and components that are
#  needed to run the DXE Foundation.
#
#  Copyright (c) 2006 - 2017, Intel Corporation. All rights reserved.<BR>
#  Copyright (c) 2017, AMD Incorporated. All rights reserved.<BR>
#
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution.  The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = DxeIpl
  FILE_GUID                  = 86D70125-BAA3-4296-A62F-602BEBBB9081
  MODULE_TYPE                = PEIM
  VERSION_STRING             = 1.0
  ENTRY_POINT                = PeimInitializeDxeIpl
  MODULE_UNI_FILE            = DxeIpl.uni

[Packages.X64]
  MdePkg/MdePkg.dec
  MdeModulePkg/MdeModulePkg.dec

[Binaries.X64]
  PE32|DxeIpl.efi

[PatchPcd.X64]

[Protocols.X64]

[Ppis.X64]
  ## PRODUCES
  gEfiDxeIplPpiGuid

  ## PRODUCES
  gEfiPeiDecompressPpiGuid

  ## SOMETIMES_PRODUCES # Not produced on S3 boot path
  gEfiEndOfPeiSignalPpiGuid

  ## SOMETIMES_CONSUMES
  gEfiPeiReadOnlyVariable2PpiGuid

  ## SOMETIMES_CONSUMES
  gEfiPeiLoadFilePpiGuid

  ## SOMETIMES_CONSUMES # Consumed on S3 boot path
  gEfiPeiS3Resume2PpiGuid

  ## SOMETIMES_CONSUMES # Consumed on recovery boot path
  gEfiPeiRecoveryModulePpiGuid

  ## SOMETIMES_CONSUMES
  ## UNDEFINED # HOB
  gEfiVectorHandoffInfoPpiGuid

  ## SOMETIMES_CONSUMES
  gEfiPeiMemoryDiscoveredPpiGuid

  ## SOMETIMES_PRODUCES
  gEfiPeiFirmwareVolumeInfoPpiGuid

  ## SOMETIMES_PRODUCES
  gEfiPeiFirmwareVolumeInfo2PpiGuid


[Guids.X64]
  ## SOMETIMES_CONSUMES ## Variable:L"MemoryTypeInformation"
  ## SOMETIMES_PRODUCES ## HOB
  gEfiMemoryTypeInformationGuid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation StackHob
  gEfiHobMemoryAllocStackGuid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation BspStoreHob
  gEfiHobMemoryAllocBspStoreGuid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation ModuleHob
  gEfiHobMemoryAllocModuleGuid

  ## SOMETIMES_PRODUCES ## GUID # FV File System Guid.
  gEfiFirmwareFileSystem2Guid


[PcdEx.X64]

[LibraryClasses.X64]
## @LIB_INSTANCES
#  MdePkg/Library/BaseDebugLibNull/BaseDebugLibNull.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/PeiHobLib/PeiHobLib.inf
#  MdePkg/Library/PeiServicesLib/PeiServicesLib.inf
#  MdePkg/Library/BaseMemoryLib/BaseMemoryLib.inf
#  MdePkg/Library/PeiMemoryAllocationLib/PeiMemoryAllocationLib.inf
#  MdePkg/Library/BasePcdLibNull/BasePcdLibNull.inf
#  MdePkg/Library/PeiServicesTablePointerLib/PeiServicesTablePointerLib.inf
#  MdePkg/Library/PeiExtractGuidedSectionLib/PeiExtractGuidedSectionLib.inf
#  MdePkg/Library/BaseUefiDecompressLib/BaseUefiDecompressLib.inf
#  MdePkg/Library/BaseReportStatusCodeLibNull/BaseReportStatusCodeLibNull.inf
#  MdePkg/Library/PeimEntryPoint/PeimEntryPoint.inf
#  MdeModulePkg/Library/DebugAgentLibNull/DebugAgentLibNull.inf

[Depex.X64]
#  gEfiPeiLoadFilePpiGuid AND gEfiPeiMasterBootModePpiGuid

[UserExtensions.TianoCore."ExtraFiles"]
DxeIplExtra.uni



#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 IPF EBC (EBC is for build only) AARCH64
#
#
# [BootMode]
#  S3_RESUME                        ## SOMETIMES_CONSUMES
#  RECOVERY_FULL                    ## SOMETIMES_CONSUMES
#
#
# [Hob]
# MEMORY_ALLOCATION                 ## SOMETIMES_PRODUCES # MEMORY_ALLOCATION_MODULE for DxeCore
# MEMORY_ALLOCATION                 ## SOMETIMES_PRODUCES # New Stack HoB
# MEMORY_ALLOCATION                 ## SOMETIMES_PRODUCES # Old Stack HOB
#
# [Hob.IPF]
# MEMORY_ALLOCATION                 ## SOMETIMES_PRODUCES # MEMORY_ALLOCATION_BSP_STORE
#

[BuildOptions.X64]
## @AsBuilt
##   GCC:DEBUG_GCC5_X64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:DEBUG_GCC5_X64_ASLDLINK_FLAGS = -nostdlib -Wl,-n,-q,--gc-sections -z common-page-size=0x40 -Wl,--entry,ReferenceAcpiTable -u ReferenceAcpiTable -Wl,-m,elf_x86_64
##   GCC:DEBUG_GCC5_X64_VFR_FLAGS = -l -n
##   GCC:DEBUG_GCC5_X64_PP_FLAGS = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
##   GCC:DEBUG_GCC5_X64_GENFW_FLAGS = 
##   GCC:DEBUG_GCC5_X64_OPTROM_FLAGS = -e
##   GCC:DEBUG_GCC5_X64_RC_FLAGS = -I binary -O elf64-x86-64        -B i386    --rename-section .data=.hii
##   GCC:DEBUG_GCC5_X64_ASM_FLAGS = -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h -m64
##   GCC:DEBUG_GCC5_X64_ASL_FLAGS = 
##   GCC:DEBUG_GCC5_X64_CC_FLAGS = -g -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -ffunction-sections -fdata-sections -include AutoGen.h -fno-common -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -m64 -fno-stack-protector "-DEFIAPI=__attribute__((ms_abi))" -maccumulate-outgoing-args -mno-red-zone -Wno-address -mcmodel=small -fpie -fno-asynchronous-unwind-tables -Wno-address -flto -DUSING_LTO -Os -D DISABLE_NEW_DEPRECATED_INTERFACES
##   GCC:DEBUG_GCC5_X64_VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
##   GCC:DEBUG_GCC5_X64_ASLCC_FLAGS = -x c -m64 -fno-lto
##   GCC:DEBUG_GCC5_X64_APP_FLAGS = 
##   GCC:DEBUG_GCC5_X64_DLINK2_FLAGS = -Wl,--defsym=PECOFF_HEADER_SIZE=0x228 -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -Wno-error
##   GCC:DEBUG_GCC5_X64_DLINK_FLAGS = -nostdlib -Wl,-n,-q,--gc-sections -z common-page-size=0x40 -Wl,--entry,$(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Wl,-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map,--whole-archive -Wl,-melf_x86_64,--oformat=elf64-x86-64,-pie -flto -Os
##   GCC:DEBUG_GCC5_X64_NASMB_FLAGS = -f bin
##   GCC:DEBUG_GCC5_X64_ASLPP_FLAGS = -x c -E -include AutoGen.h
##   GCC:DEBUG_GCC5_X64_OBJCOPY_FLAGS = 
##   GCC:DEBUG_GCC5_X64_ASMLINK_FLAGS = /nologo /tiny
##   GCC:DEBUG_GCC5_X64_NASM_FLAGS = -f elf64
