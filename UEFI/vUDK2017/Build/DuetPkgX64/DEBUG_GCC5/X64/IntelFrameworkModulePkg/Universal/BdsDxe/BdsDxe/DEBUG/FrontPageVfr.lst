//
//  VFR compiler version  2.01 (UEFI 2.4) 
//
extern unsigned char BdsDxeStrings[];
extern EFI_GUID { 0x9e0c30bc, 0x3f06, 0x4ba6, {0x82, 0x88, 0x9, 0x17, 0x9b, 0x85, 0x5d, 0xbe }};
extern EFI_GUID { 0x642237c7, 0x35d4, 0x472d, {0x83, 0x65, 0x12, 0xe0, 0xcc, 0xf2, 0x7a, 0x22 }};
extern EFI_GUID { 0x1f2d63e1, 0xfebd, 0x4dc7, {0x9c, 0xc5, 0xba, 0x2b, 0x1c, 0xef, 0x9c, 0x5b }};
extern EFI_GUID { 0x847bc3fe, 0xb974, 0x446d, {0x94, 0x49, 0x5a, 0xd5, 0x41, 0x2e, 0x99, 0x3b }};
extern EFI_GUID { 0x3ebfa8e6, 0x511d, 0x4b5b, {0xa9, 0x5f, 0xfb, 0x38, 0x26, 0xf, 0x1c, 0x27 }};
extern EFI_GUID { 0xf76e0a70, 0xb5ed, 0x4c38, {0xac, 0x9a, 0xe5, 0xf5, 0x4b, 0xf1, 0x6e, 0x34 }};
formset
>00000000: 0E A7 BC 30 0C 9E 06 3F A6 4B 82 88 09 17 9B 85 5D BE 8E 00 02 00 01 BC 30 0C 9E 06 3F A6 4B 82 88 09 17 9B 85 5D BE 
>00000027: 5C 06 00 00 00 00 
>0000002D: 5C 06 00 00 01 00 
  guid = { 0x9e0c30bc, 0x3f06, 0x4ba6, {0x82, 0x88, 0x9, 0x17, 0x9b, 0x85, 0x5d, 0xbe} },
  title = STRING_TOKEN(0x008E),
  help = STRING_TOKEN(0x0002),
  classguid = { 0x9e0c30bc, 0x3f06, 0x4ba6, {0x82, 0x88, 0x9, 0x17, 0x9b, 0x85, 0x5d, 0xbe} },
  form formid = 0x1000,
>00000033: 01 86 00 10 8E 00 
       title = STRING_TOKEN(0x008E);
    banner
>00000039: 5F 18 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 01 8F 00 01 00 00 
      title = STRING_TOKEN(0x008F),
      line 1,
      align left;
    banner
>00000051: 5F 18 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 01 90 00 02 00 00 
      title = STRING_TOKEN(0x0090),
      line 2,
      align left;
    banner
>00000069: 5F 18 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 01 91 00 02 00 02 
      title = STRING_TOKEN(0x0091),
      line 2,
      align right;
    banner
>00000081: 5F 18 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 01 93 00 03 00 00 
      title = STRING_TOKEN(0x0093),
      line 3,
      align left;
    banner
>00000099: 5F 18 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 01 92 00 03 00 02 
      title = STRING_TOKEN(0x0092),
      line 3,
      align right;
    text
      help = STRING_TOKEN(0x009B),
      text = STRING_TOKEN(0x009A),
      flags = INTERACTIVE,
>000000B1: 0C 8F 9A 00 9B 00 00 10 00 00 FF FF 04 00 00 
      key = 0x1000;
>000000C0: 29 02 
    label 0x1000;
>000000C2: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 00 10 
    label 0xffff;
>000000D7: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 FF FF 
    goto 0x0003,
>000000EC: 0F 0F 9E 00 9F 00 64 10 00 00 FF FF 04 03 00 
      prompt = STRING_TOKEN(0x009E),
      help = STRING_TOKEN(0x009F),
      flags = INTERACTIVE,
      key = 0x1064;
    goto 0x0004,
>000000FB: 0F 0F A2 00 A3 00 67 85 00 00 FF FF 04 04 00 
      prompt = STRING_TOKEN(0x00A2),
      help = STRING_TOKEN(0x00A3),
      flags = INTERACTIVE,
      key = 0x8567;
    goto 0x0005,
>0000010A: 0F 0F A0 00 A1 00 76 98 00 00 FF FF 04 05 00 
      prompt = STRING_TOKEN(0x00A0),
      help = STRING_TOKEN(0x00A1),
      flags = INTERACTIVE,
      key = 0x9876;
  endform;
>00000119: 29 02 
endformset;
>0000011B: 29 02 

//
// All Opcode Record List 
//
>00000000: 0E A7 BC 30 0C 9E 06 3F A6 4B 82 88 09 17 9B 85 5D BE 8E 00 02 00 01 BC 30 0C 9E 06 3F A6 4B 82 88 09 17 9B 85 5D BE 
>00000027: 5C 06 00 00 00 00 
>0000002D: 5C 06 00 00 01 00 
>00000033: 01 86 00 10 8E 00 
>00000039: 5F 18 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 01 8F 00 01 00 00 
>00000051: 5F 18 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 01 90 00 02 00 00 
>00000069: 5F 18 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 01 91 00 02 00 02 
>00000081: 5F 18 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 01 93 00 03 00 00 
>00000099: 5F 18 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 01 92 00 03 00 02 
>000000B1: 0C 8F 9A 00 9B 00 00 10 00 00 FF FF 04 00 00 
>000000C0: 29 02 
>000000C2: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 00 10 
>000000D7: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 FF FF 
>000000EC: 0F 0F 9E 00 9F 00 64 10 00 00 FF FF 04 03 00 
>000000FB: 0F 0F A2 00 A3 00 67 85 00 00 FF FF 04 04 00 
>0000010A: 0F 0F A0 00 A1 00 76 98 00 00 FF FF 04 05 00 
>00000119: 29 02 
>0000011B: 29 02 

Total Size of all record is 0x0000011D


***************************************************************
		mPackAlign = 8
		struct EFI_HII_REF : mAlign [16] mTotalSize [0x16]

		struct EFI_HII_REF {
			+00000000[00000000] QuestionId <UINT16>
			+00000002[00000002] FormId <UINT16>
			+00000004[00000004] FormSetGuid <(null)>
			+00000020[00000014] DevicePath <EFI_STRING_ID>
		};
---------------------------------------------------------------
		struct EFI_HII_TIME : mAlign [1] mTotalSize [0x3]

		struct EFI_HII_TIME {
			+00000000[00000000] Hours <UINT8>
			+00000001[00000001] Minutes <UINT8>
			+00000002[00000002] Seconds <UINT8>
		};
---------------------------------------------------------------
		struct EFI_STRING_ID : mAlign [2] mTotalSize [0x2]

		struct EFI_STRING_ID {
		};
---------------------------------------------------------------
		struct EFI_HII_DATE : mAlign [2] mTotalSize [0x4]

		struct EFI_HII_DATE {
			+00000000[00000000] Year <UINT16>
			+00000002[00000002] Month <UINT8>
			+00000003[00000003] Day <UINT8>
		};
---------------------------------------------------------------
		struct BOOLEAN : mAlign [1] mTotalSize [0x1]

		struct BOOLEAN {
		};
---------------------------------------------------------------
		struct UINT8 : mAlign [1] mTotalSize [0x1]

		struct UINT8 {
		};
---------------------------------------------------------------
		struct UINT16 : mAlign [2] mTotalSize [0x2]

		struct UINT16 {
		};
---------------------------------------------------------------
		struct UINT32 : mAlign [4] mTotalSize [0x4]

		struct UINT32 {
		};
---------------------------------------------------------------
		struct UINT64 : mAlign [8] mTotalSize [0x8]

		struct UINT64 {
		};
---------------------------------------------------------------
***************************************************************
