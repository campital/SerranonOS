//
//  VFR compiler version  2.01 (UEFI 2.4) 
//
extern unsigned char BdsDxeStrings[];
extern EFI_GUID { 0x9e0c30bc, 0x3f06, 0x4ba6, {0x82, 0x88, 0x9, 0x17, 0x9b, 0x85, 0x5d, 0xbe }};
extern EFI_GUID { 0x642237c7, 0x35d4, 0x472d, {0x83, 0x65, 0x12, 0xe0, 0xcc, 0xf2, 0x7a, 0x22 }};
extern EFI_GUID { 0x1f2d63e1, 0xfebd, 0x4dc7, {0x9c, 0xc5, 0xba, 0x2b, 0x1c, 0xef, 0x9c, 0x5b }};
extern EFI_GUID { 0x847bc3fe, 0xb974, 0x446d, {0x94, 0x49, 0x5a, 0xd5, 0x41, 0x2e, 0x99, 0x3b }};
extern EFI_GUID { 0x3ebfa8e6, 0x511d, 0x4b5b, {0xa9, 0x5f, 0xfb, 0x38, 0x26, 0xf, 0x1c, 0x27 }};
extern EFI_GUID { 0xf76e0a70, 0xb5ed, 0x4c38, {0xac, 0x9a, 0xe5, 0xf5, 0x4b, 0xf1, 0x6e, 0x34 }};
extern UINT8 DeviceManagerVfrBin[];
extern UINT8 DriverHealthVfrBin[];
formset
>00000000: 0E A7 E6 A8 BF 3E 1D 51 5B 4B A9 5F FB 38 26 0F 1C 27 6E 00 76 00 01 E6 A8 BF 3E 1D 51 5B 4B A9 5F FB 38 26 0F 1C 27 
>00000027: 5C 06 00 00 00 00 
>0000002D: 5C 06 00 00 01 00 
  guid = { 0x3ebfa8e6, 0x511d, 0x4b5b, {0xa9, 0x5f, 0xfb, 0x38, 0x26, 0xf, 0x1c, 0x27} },
  title = STRING_TOKEN(0x006E),
  help = STRING_TOKEN(0x0076),
  classguid = { 0x3ebfa8e6, 0x511d, 0x4b5b, {0xa9, 0x5f, 0xfb, 0x38, 0x26, 0xf, 0x1c, 0x27} },
  form formid = 0x1000,
>00000033: 01 86 00 10 6E 00 
       title = STRING_TOKEN(0x006E);
    subtitle text = STRING_TOKEN(0x006F);
>00000039: 02 87 6F 00 00 00 00 
>00000040: 29 02 
    label 0x0001;
>00000042: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 01 00 
    label 0x0002;
>00000057: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 02 00 
    label 0x0004;
>0000006C: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 04 00 
    label 0x0008;
>00000081: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 08 00 
    label 0x0010;
>00000096: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 10 00 
    label 0x1100;
>000000AB: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 00 11 
    label 0xffff;
>000000C0: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 FF FF 
    subtitle text = STRING_TOKEN(0x0076);
>000000D5: 02 87 76 00 00 00 00 
>000000DC: 29 02 
    label 0x0040;
>000000DE: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 40 00 
    label 0xffff;
>000000F3: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 FF FF 
    subtitle text = STRING_TOKEN(0x0076);
>00000108: 02 87 76 00 00 00 00 
>0000010F: 29 02 
    subtitle text = STRING_TOKEN(0x0081);
>00000111: 02 87 81 00 00 00 00 
>00000118: 29 02 
  endform;
>0000011A: 29 02 
  form formid = 0x1001,
>0000011C: 01 86 01 10 8B 00 
       title = STRING_TOKEN(0x008B);
    subtitle text = STRING_TOKEN(0x008C);
>00000122: 02 87 8C 00 00 00 00 
>00000129: 29 02 
       label 0x1101;
>0000012B: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 01 11 
       label 0xffff;
>00000140: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 FF FF 
       subtitle text = STRING_TOKEN(0x0076);
>00000155: 02 87 76 00 00 00 00 
>0000015C: 29 02 
    subtitle text = STRING_TOKEN(0x0081);
>0000015E: 02 87 81 00 00 00 00 
>00000165: 29 02 
  endform;
>00000167: 29 02 
  form formid = 0x1002,
>00000169: 01 86 02 10 88 00 
       title = STRING_TOKEN(0x0088);
    subtitle text = STRING_TOKEN(0x0089);
>0000016F: 02 87 89 00 00 00 00 
>00000176: 29 02 
       label 0x1102;
>00000178: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 02 11 
       label 0xffff;
>0000018D: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 FF FF 
       subtitle text = STRING_TOKEN(0x0076);
>000001A2: 02 87 76 00 00 00 00 
>000001A9: 29 02 
    subtitle text = STRING_TOKEN(0x0081);
>000001AB: 02 87 81 00 00 00 00 
>000001B2: 29 02 
  endform;
>000001B4: 29 02 
endformset;
>000001B6: 29 02 

//
// All Opcode Record List 
//
>00000000: 0E A7 E6 A8 BF 3E 1D 51 5B 4B A9 5F FB 38 26 0F 1C 27 6E 00 76 00 01 E6 A8 BF 3E 1D 51 5B 4B A9 5F FB 38 26 0F 1C 27 
>00000027: 5C 06 00 00 00 00 
>0000002D: 5C 06 00 00 01 00 
>00000033: 01 86 00 10 6E 00 
>00000039: 02 87 6F 00 00 00 00 
>00000040: 29 02 
>00000042: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 01 00 
>00000057: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 02 00 
>0000006C: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 04 00 
>00000081: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 08 00 
>00000096: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 10 00 
>000000AB: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 00 11 
>000000C0: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 FF FF 
>000000D5: 02 87 76 00 00 00 00 
>000000DC: 29 02 
>000000DE: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 40 00 
>000000F3: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 FF FF 
>00000108: 02 87 76 00 00 00 00 
>0000010F: 29 02 
>00000111: 02 87 81 00 00 00 00 
>00000118: 29 02 
>0000011A: 29 02 
>0000011C: 01 86 01 10 8B 00 
>00000122: 02 87 8C 00 00 00 00 
>00000129: 29 02 
>0000012B: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 01 11 
>00000140: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 FF FF 
>00000155: 02 87 76 00 00 00 00 
>0000015C: 29 02 
>0000015E: 02 87 81 00 00 00 00 
>00000165: 29 02 
>00000167: 29 02 
>00000169: 01 86 02 10 88 00 
>0000016F: 02 87 89 00 00 00 00 
>00000176: 29 02 
>00000178: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 02 11 
>0000018D: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 FF FF 
>000001A2: 02 87 76 00 00 00 00 
>000001A9: 29 02 
>000001AB: 02 87 81 00 00 00 00 
>000001B2: 29 02 
>000001B4: 29 02 
>000001B6: 29 02 

Total Size of all record is 0x000001B8


***************************************************************
		mPackAlign = 8
		struct EFI_HII_REF : mAlign [16] mTotalSize [0x16]

		struct EFI_HII_REF {
			+00000000[00000000] QuestionId <UINT16>
			+00000002[00000002] FormId <UINT16>
			+00000004[00000004] FormSetGuid <(null)>
			+00000020[00000014] DevicePath <EFI_STRING_ID>
		};
---------------------------------------------------------------
		struct EFI_HII_TIME : mAlign [1] mTotalSize [0x3]

		struct EFI_HII_TIME {
			+00000000[00000000] Hours <UINT8>
			+00000001[00000001] Minutes <UINT8>
			+00000002[00000002] Seconds <UINT8>
		};
---------------------------------------------------------------
		struct EFI_STRING_ID : mAlign [2] mTotalSize [0x2]

		struct EFI_STRING_ID {
		};
---------------------------------------------------------------
		struct EFI_HII_DATE : mAlign [2] mTotalSize [0x4]

		struct EFI_HII_DATE {
			+00000000[00000000] Year <UINT16>
			+00000002[00000002] Month <UINT8>
			+00000003[00000003] Day <UINT8>
		};
---------------------------------------------------------------
		struct BOOLEAN : mAlign [1] mTotalSize [0x1]

		struct BOOLEAN {
		};
---------------------------------------------------------------
		struct UINT8 : mAlign [1] mTotalSize [0x1]

		struct UINT8 {
		};
---------------------------------------------------------------
		struct UINT16 : mAlign [2] mTotalSize [0x2]

		struct UINT16 {
		};
---------------------------------------------------------------
		struct UINT32 : mAlign [4] mTotalSize [0x4]

		struct UINT32 {
		};
---------------------------------------------------------------
		struct UINT64 : mAlign [8] mTotalSize [0x8]

		struct UINT64 {
		};
---------------------------------------------------------------
***************************************************************
